MODULE main
VAR
-- the man and the three items
  cabbage : {right,left};
  sheep   : {right,left};
  wolf    : {right,left};
  man     : {right,left};
-- possible moves
  move    : {c, s, w, e};

DEFINE
  carry_cabbage := move=c;
  carry_sheep := move=s;
  carry_wolf := move=w;
  no_carry := move=e;

INIT
  cabbage = right &
  sheep = right &
  wolf = right &
  man = right

TRANS
  carry_cabbage -> (next(cabbage) != cabbage & next(man) != man & next(sheep) = sheep & next(wolf) = wolf)
TRANS
  carry_sheep -> (next(cabbage) = cabbage & next(man) != man & next(sheep) != sheep & next(wolf) = wolf)
TRANS
  carry_wolf -> (next(cabbage) = cabbage & next(man) != man & next(sheep) = sheep & next(wolf) != wolf)
TRANS
  no_carry -> (next(cabbage) = cabbage & next(man) != man & next(sheep) = sheep & next(wolf) = wolf)

TRANS
  (next(man) != next(cabbage)) -> (next(move) != c)
TRANS
  (next(man) != next(sheep)) -> (next(move) != s)
TRANS
  (next(man) != next(wolf)) -> (next(move) != w)

DEFINE
  safe := (sheep = cabbage | sheep = wolf) -> (man = sheep);
  goal := (man = left & sheep = left & wolf = left & cabbage = left);

LTLSPEC
  ! (safe U goal)
